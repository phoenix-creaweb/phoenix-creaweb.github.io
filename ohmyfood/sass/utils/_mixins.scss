// génération du code pour formatter les menus (couleurs de fond, polices, ...)

@mixin format-menu ($menu)
 {
    @each $menu, $argument in $map-menu
    {
        &-#{$menu} // génération du selecteur -mx
        {
            background-color: map-get($map: $argument, $key: bg);
            color: map-get($map: $argument, $key: clr-base);
            font-family: map-get($map: $argument, $key: ftx);
            
            &__title // génération du selecteur -mx__title
            {
                font-family: map-get($map: $argument, $key: ft);
                color: map-get($map: $argument, $key: clr-base);
            }
            &__subtitle // génération du selecteur -mx__subtitle
            {
                color: map-get($map: $argument, $key: clr-subtitle);
                font-family: map-get($map: $argument, $key: ftx);
            }
            &__entree // génération du selecteur -mx__entree
            {
                color: map-get($map: $argument, $key: clr-entree);
                font-size: map-get($map: $argument, $key: ftx-size);
                
                &-titre // génération du selecteur -mx__entree-titre
                {
                    display: flex;
                    justify-content: space-between;
                    p
                    {
                        border-bottom: $size-XXS solid map-get($map: $argument, $key: bg);
                        &:hover
                        {
                            border-bottom: $size-XXS solid map-get($map: $argument, $key: clr-entree);
                        }
                    }

                    .deco-left
                        {
                            border-bottom: $size-XS solid map-get($map: $argument, $key: clr-entree-deco );
                            width: $width-deco;
                            position: relative;
                            bottom: 16px;
                        }
                    
                    .deco-right
                        {
                            border-bottom: $size-XS solid map-get($map: $argument, $key: clr-entree-deco );
                            width: $width-deco;
                            position: relative;
                            bottom: 16px;
                        }
                }
            }

            &__plat
            {
                color: map-get($map: $argument, $key: clr-plat);
                font-size: map-get($map: $argument, $key: ftx-size);
                &-titre
                {
                    display: flex;
                    justify-content: space-between;
                    p
                    {
                        border-bottom: $size-XXS solid map-get($map: $argument, $key: bg);
                        &:hover
                        {
                            border-bottom: $size-XXS solid map-get($map: $argument, $key: clr-plat);
                        }
                    }

                    .deco-left
                        {
                            border-bottom: $size-XS solid map-get($map: $argument, $key: clr-plat-deco );
                            width: $width-deco;
                            position: relative;
                            bottom: 16px;
                        }
                    .deco-right
                        {
                            border-bottom: $size-XS solid map-get($map: $argument, $key: clr-plat-deco );
                            width: $width-deco;
                            position: relative;
                            bottom: 16px;
                        }
                }
            }
            &__dessert
            {
                color: map-get($map: $argument, $key: clr-dessert);
                font-size: map-get($map: $argument, $key: ftx-size);
                &-titre
                {
                    display: flex;
                    justify-content: space-between;
                    p
                    {
                        border-bottom: $size-XXS solid map-get($map: $argument, $key: bg);
                        &:hover
                        {
                            border-bottom: $size-XXS solid map-get($map: $argument, $key: clr-dessert);
                        }
                    }

                    .deco-left
                        {
                            border-bottom: $size-XS solid map-get($map: $argument, $key: clr-dessert-deco );
                            width: $width-deco;
                            position: relative;
                            bottom: 16px;
                        }
                    .deco-right
                        {
                            border-bottom: $size-XS solid map-get($map: $argument, $key: clr-dessert-deco );
                            width: $width-deco;
                            position: relative;
                            bottom: 16px;
                        }
                }
            }
        }
    }
}

